let hooman = 100;
let cat = 0;
let statsHaveBeenShown = false;

window.onload = function() {
    const music = document.getElementById('bg-music');
    music.volume = 0.3;
    music.play().catch(() => {
        
    });
    document.getElementById('toggle-music').onclick = function() {
        if (music.paused) {
            music.play();
        } else {
            music.pause();
        }
    };

    startGame();
};


function applyTheme(isHooman) {
    const body = document.body;
    const game = document.getElementById('game');
    if (isHooman) {
        body.classList.add('hooman-theme');
        body.classList.remove('potichat-theme');
        game.classList.add('hooman-theme');
        game.classList.remove('potichat-theme');
    } else {
        body.classList.add('potichat-theme');
        body.classList.remove('hooman-theme');
        game.classList.add('potichat-theme');
        game.classList.remove('hooman-theme');
    }
}

function showStory(text, next) {
    document.getElementById('story').innerHTML = text;
    document.getElementById('choices').innerHTML = '';
    if (!statsHaveBeenShown) {
        document.getElementById('stats').style.display = 'none';
    }
    if (next) {
        const btn = document.createElement('button');
        btn.textContent = "Continuer";
        btn.className = "continue-btn";
        btn.onclick = next;
        document.getElementById('choices').appendChild(btn);
    }
}

function showChoices(choices) {
    applyTheme(true); // Tour du joueur
    const div = document.getElementById('choices');
    div.innerHTML = '';
    choices.forEach(choice => {
        const btn = document.createElement('button');
        btn.textContent = choice.text;
        btn.classList.add('choice-btn');
        btn.onclick = choice.action;
        div.appendChild(btn);
    });
    updateStats();
    document.getElementById('stats').style.display = '';
    statsHaveBeenShown = true;
}

function updateStats() {
    document.getElementById('stats').innerHTML =
        `Affection PotiChat : ${cat}/100<br>Sant√© mentale : ${hooman}/100`;
}

function randomize(min, max) {
    return Math.round(Math.random() * (max - min) + min);
}
function minMax(value, min, max) {
    return Math.max(min, Math.min(max, value));
}

function showFailMessage(isHooman, nextMessage, nextCallback) {
    showStory(
        isHooman ? "Mais √©chouez !" : "Mais √©choue !",
        () => showStory(nextMessage, nextCallback)
    );
}

function startGame() {
    applyTheme(true); 
    showStory(
        "Vous √™tes en train de vous promener dans la for√™t lorsque...<br>Un PotiChat apparait !",
        showWhatDoYouWant
    );
}

function showWhatDoYouWant() {
    showStory("Que voulez-vous faire ?", showActionButtons);
}

function showActionButtons() {
    document.getElementById('story').innerHTML = "";
    showChoices([
        { text: "Jouer", action: jouer },
        { text: "Regarder des vid√©os de chats", action: video },
        { text: "Caresser", action: caresser },
        { text: "Donner des friandises", action: friandise }
    ]);
}

function nextTurn() {
    if (cat >= 100) {
        const finalTextPart1 = "Vous avez charm√© PotiChat !<br>Il vous suit jusque chez vous et vous laisse le servir jusqu'√† la fin de sa vie.";
        const finalTextPart2 = "Vous devenez le serviteur de PotiChat et votre maison devient sa maison.<br>Vous ne pourriez √™tre plus heureux.<br><span class='cat-emoji'>‚∏ù( ///‚óûÍàç ‚àá Íàç///)‚∏ù‚ô°  ·ìö(  =  üù¶ Ôªå üù¶ =)</span>";
        showStory(finalTextPart1, () => showFinalMessage(finalTextPart2));
        return;
    }
    if (hooman <= 0) {
        const finalTextPart1 = "A bout de force, vous tombez.<br>PotiChat vous lance un regard m√©prisant avant de partir.";
        const finalTextPart2 = "Vous passez la nuit recroquevill√© sur le sol √† pleurer.<br>_(:¬∞–∑„Äç‚à†)_";
        showStory(finalTextPart1, () => showFinalMessage(finalTextPart2));
        return;
    }
    showWhatDoYouWant();
}


function showFinalMessage(text) {
    document.getElementById('story').innerHTML = text;
    const div = document.getElementById('choices');
    div.innerHTML = '';
    const btn = document.createElement('button');
    btn.textContent = "Rejouer";
    btn.className = "continue-btn";
    btn.onclick = restartGame;
    div.appendChild(btn);
    document.getElementById('stats').style.display = 'none';
}


function jouer() {
    showStory(
        "Vous ramassez une branche par terre et l'agitez devant PotiChat...",
        () => {
            let play = randomize(1, 2);
            if (play === 1) {
                cat = minMax(cat + 10, 0, 100);
                updateStats();
                showStory("// ‡∏Ö(=Œ¶ œâ Œ¶ = )‚üÜ<br>PotiChat commence √† jouer avec le b√¢ton.<br>PotiChat gagne 10 d'affection !", catStats);
            } else {
                showFailMessage(
                    true,
                    "(=üù¶ Ôªå üù¶ = )‚üÜ<br>PotiChat n'est pas impressionn√©.",
                    catStats
                );
            }
        }
    );
}

function video() {
    showStory(
        "Vous d√©cidez de regarder des vid√©os de chats...",
        () => {
            let watchCatVideo = randomize(1, 3);
            if (watchCatVideo === 1) {
                hooman = minMax(hooman + 15, 0, 100);
                updateStats();
                showStory("( Ô∏∂‚ó° Ô∏∂ ‚ùÄ )<br>Les vid√©os soulagent votre coeur meurtri.<br>Vous gagnez 15 de sant√© mentale !", catStats);
            } else {
                showFailMessage(
                    true,
                    "Votre n'avez pas de connexion...<br>(‚ï•Ôπè‚ï•)",
                    catStats
                );
            }
        }
    );
}

function caresser() {
    showStory(
        "Vous tentez de caresser PotiChat...",
        () => {
            let pet = randomize(1, 3);
            if (pet === 1) {
                cat = minMax(cat + 20, 0, 100);
                updateStats();
                showStory(
                    "„ÉΩ(o‚ô° o)/<br>PotiChat se laisse faire.<br>Des larmes apparaissent dans vos yeux.",
                    () => showStory(
                        "(=üù¶ Ôªå üù¶ = )‚üÜ<br>PotiChat vous regarde d'un air m√©prisant puis s'√©loigne.<br>PotiChat gagne 20 d'affection !",
                        catStats
                    )
                );
            } else {
                showFailMessage(
                    true,
                    "Œµ=(= ‚ó£ Ôªå ‚ó¢ =)<br>PotiChat vous lance un regard noir.<br>Vous d√©cidez d'√©pargner votre main.",
                    catStats
                );
            }
        }
    );
}

function friandise() {
    showStory(
        "Vous tendez une friandise √† PotiChat...",
        () => {
            let giveCatFood = randomize(1, 4);
            if (giveCatFood === 1) {
                cat = minMax(cat + 30, 0, 100);
                updateStats();
                showStory("‡πë(=Œ¶ÔºêŒ¶= ‡πë)‚üÜ<br>C'est tr√®s efficace !", () => showStory("PotiChat mange la friandise.<br>PotiChat gagne 30 d'affection !", catStats));
            } else if (giveCatFood === 4) {
                showFailMessage(
                    true,
                    "PotiChat donne un coup de patte dans la friandise qui tombe sur le sol.<br>(‚ï•Ôπè‚ï•)",
                    catStats
                );
            } else {
                showFailMessage(
                    true,
                    "Œµ=(= ‚ó£ Ôªå ‚ó¢ =)<br>PotiChat vous lance un regard noir.<br>Vous r√©cup√©rez votre friandise.",
                    catStats
                );
            }
        }
    );
}

// Actions du chat
function catStats() {
    if (cat >= 100 || hooman <= 0) {
        nextTurn();
        return;
    }
    applyTheme(false); // Tour du chat
    showStory("PotiChat passe √† l'action !", catRandomAction);
}

function catRandomAction() {
    let catAction = randomize(1, 4);
    if (catAction === 1) {
        catIgnore();
    } else if (catAction === 2) {
        catClean();
    } else if (catAction === 3) {
        catHiss();
    } else if (catAction === 4) {
        catGriffe();
    }
}

function catIgnore() {
    showStory(
        "PotiChat utilise ignore !",
        () => {
            let ignore = randomize(1, 2);
            if (ignore === 1) {
                hooman = minMax(hooman - 10, 0, 100);
                updateStats();
                showStory("=/·ê†--·êü\\=<br>PotiChat se tourne et vous ignore.", () => showStory("Il n'a que faire de vos supplications.<br>Votre coeur se brise.<br>Vous perdez 10 de sant√© mentale.", nextTurn));
            } else {
                showFailMessage(
                    false,
                    "( Ôªå üù¶ =)‚üÜ<br>PotiChat ne peut s'emp√™cher d'√™tre intrigu√©.<br>Il tourne la t√™te mais garde un oeil curieux sur vous.",
                    nextTurn
                );
            }
        }
    );
}

function catClean() {
    showStory(
        "PotiChat utilise toilette !",
        () => {
            let clean = randomize(1, 3);
            if (clean === 1) {
                cat = minMax(cat - 15, 0, 100);
                updateStats();
                showStory("·ìö(=Ô∏∂ Ôªå Ô∏∂=)<br>PotiChat commence √† faire sa toilette.", () => showStory("Une fois termin√©e, il se sent propre et ind√©pendant.<br>PotiChat perd 15 d'affection.", nextTurn));
            } else {
                showFailMessage(
                    false,
                    "(=‚ó° Ôªå üù¶ = )‚üÜ<br>PotiChat ne vous l√¢che pas d'un oeil.<br>Il ne peut pas r√©aliser toilette correctement.",
                    nextTurn
                );
            }
        }
    );
}

function catHiss() {
    showStory(
        "PotiChat utilise hiss !",
        () => {
            let hiss = randomize(1, 3);
            if (hiss === 1) {
                hooman = minMax(hooman - 20, 0, 100);
                updateStats();
                showStory("(=Œ¶ ‚∞ô Œ¶ = )‚üÜ<br>PotiChat se met √† feuler.", () => showStory("Vous √™tes effray√© par PotiChat.<br>Vous perdez 20 de sant√© mentale", nextTurn));
            } else {
                showFailMessage(
                    false,
                    "·ìö( =–§ Ôªå –§= )?<br>PotiChat vous observe d'un oeil intrigu√©.",
                    nextTurn
                );
            }
        }
    );
}

function catGriffe() {
    showStory(
        "PotiChat utilise feinte !<br>Il s'approche doucement...",
        () => {
            let griffe = randomize(1, 4);
            if (griffe === 1) {
                showStory(
                    "PotiChat s'approche de vous...",
                    () => showStory(
                        "(=‚úß ‚∞ô ‚úß =)‡∏Ö ·µê·µâ·µí ∑ÀéÀäÀó<br>PotiChat envoi la patte et vous griffe !<br>C'est tr√®s efficace !",
                        () => {
                            hooman = minMax(hooman - 30, 0, 100);
                            updateStats();
                            showStory(
                                "Vous saignez, mais votre coeur souffre davantage.<br>Vous perdez 30 de sant√© mentale",
                                nextTurn
                            );
                        }
                    )
                );
            } else {
                showFailMessage(
                    false,
                    "(=üù¶ Ôªå üù¶ = )‚üÜ<br>Face √† votre grand sourire, il pr√©f√®re faire demi-tour.",
                    nextTurn
                );
            }
        }
    );
}



function showRestartButton() {
    const div = document.getElementById('choices');
    div.innerHTML = '';
    const btn = document.createElement('button');
    btn.textContent = "Rejouer";
    btn.className = "continue-btn";
    btn.onclick = restartGame;
    div.appendChild(btn);
    if (!statsHaveBeenShown) {
        document.getElementById('stats').style.display = 'none';
    }
}

function restartGame() {
    hooman = 100;
    cat = 0;
    statsHaveBeenShown = false;
    startGame();
}


